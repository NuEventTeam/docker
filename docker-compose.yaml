version: '3.9'

services:
  gateway:
    container_name: gateway
    build:
      context: ../
      dockerfile: ./docker/gateway/Dockerfile
    image: gateway
    restart: always
    tty: true
    volumes:
      - ../${API_DIR:-gateway-api}:/var/www/gateway
    ports:
      - '8000:8000'
    networks:
      - api
    depends_on:
      - auth-db
      - keydb
      - migrator

  auth:
    container_name: auth
    build:
      context: ../
      dockerfile: ./docker/auth/Dockerfile
    image: auth
    restart: always
    tty: true
    expose:
      - '8001:8001'
    networks:
      - api
    depends_on:
      - auth-db
      - keydb
      - migrator
      - gateway

  migrator:
    container_name: migrations
    build:
      context: ../
      dockerfile: ./docker/migrator/Dockerfile
    tty: true
    restart: always
    networks:
      - api
    depends_on:
      - auth-db

  auth-db:
    image: postgres:15.4-alpine
    restart: always
    tty: true
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: auth
    expose:
      - '5432:5432'
    volumes:
      - postgres-auth:/var/lib/postgresql/data
    networks:
      - api
  event-db:
    image: postgres:15.4-alpine
    restart: always
    tty: true
    environment:
      POSTGRES_DB: event
      POSTGRES_USER: event
      POSTGRES_PASSWORD: event
    expose:
      - '5433:5432'
    volumes:
      - postgres-event:/var/lib/postgresql/data
    networks:
      - api


  keydb:
    container_name: auth-keydb
    image: eqalpha/keydb:latest
    restart: always
    tty: true
    volumes:
      - keydb:/data
    expose:
      - '6379:6379'
    command:
     - '--requirepass auth'
    networks:
      - api

volumes:
  postgres-auth:
    driver: local
  postgres-event:
    driver: local
  keydb:
    driver: local


networks:
  api:
    driver: bridge
